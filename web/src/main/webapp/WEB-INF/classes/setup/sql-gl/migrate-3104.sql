
-- 3.0.3 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v303/migrate-default.sql

create table metadataidentifiertemplate
(
    id         integer                  not null
        constraint metadataidentifiertemplate_pkey
            primary key,
    name       varchar(32)              not null,
    isprovided char default 'n'::bpchar not null,
    template   varchar(255)             not null
);

INSERT INTO MetadataIdentifierTemplate (id, name, template, isprovided) VALUES  (0, 'Custom URN', '', 'y');
INSERT INTO MetadataIdentifierTemplate (id, name, template, isprovided) VALUES  (1, 'Autogenerated URN', '', 'y');

DELETE FROM Settings WHERE name LIKE 'system/shib/%';

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/metadatacreate/generateUuid', 'true', 2, 9100, 'n');

ALTER TABLE Users ADD COLUMN enabled boolean;
UPDATE Users SET enabled = true;

ALTER TABLE Mapservers ADD COLUMN pushstyleinworkspace varchar(1);
UPDATE Mapservers SET pushstyleinworkspace = 'n';



-- 3.0.4 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v304/migrate-default.sql

ALTER TABLE HarvesterData RENAME COLUMN "key" TO keyvalue;


-- 3.0.5 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v305/migrate-default.sql

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/workflow/allowPublishInvalidMd', 'true', 2, 100003, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/workflow/automaticUnpublishInvalidMd', 'false', 2, 100004, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/workflow/forceValidationOnMdSave', 'false', 2, 100005, 'n');


-- 3.0.6 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v306/migrate-default.sql



-- 3.1.0 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v310/migrate-default.sql

DELETE FROM Settings WHERE name = 'system/metadata/enableSimpleView';
DELETE FROM Settings WHERE name = 'system/metadata/enableIsoView';
DELETE FROM Settings WHERE name = 'system/metadata/enableInspireView';
DELETE FROM Settings WHERE name = 'system/metadata/enableXmlView';
DELETE FROM Settings WHERE name = 'system/metadata/defaultView';


INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/feedback/mailServer/tls', 'false', 2, 644, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/feedback/mailServer/ignoreSslCertificateErrors', 'false', 2, 645, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/xlinkResolver/ignore', 'operatesOn,featureCatalogueCitation,Anchor,source', 0, 2312, 'n');

DELETE FROM Settings WHERE name = 'system/z3950/enable';
DELETE FROM Settings WHERE name = 'system/z3950/port';
DELETE FROM Settings WHERE name = 'system/removedMetadata/dir';


-- 3.2.0 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v320/migrate-default.sql

-- 3.2.1 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v321/migrate-default.sql
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/cors/allowedHosts', '*', 0, 561, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES
  ('map/bingKey', 'AnElW2Zqi4fI-9cYx1LHiQfokQ9GrNzcjOh_p_0hkO1yo78ba8zTLARcLBIf8H6D', 0, 9595, 'n');


-- 3.2.2 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v322/migrate-default.sql

ALTER TABLE users ADD COLUMN isenabled CHAR(1) DEFAULT 'y';
UPDATE users SET isenabled = 'y' WHERE enabled = true;
UPDATE users SET isenabled = 'n' WHERE enabled = false;
ALTER TABLE users  DROP COLUMN enabled;

ALTER TABLE groups ADD COLUMN enableCategoriesRestriction CHAR(1) DEFAULT 'n';
UPDATE groups SET enableCategoriesRestriction = 'n';


-- 3.2.3 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v323/migrate-default.sql


-- 3.3.0 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v330/migrate-default.sql

INSERT INTO Settings (name, value, datatype, position, internal) VALUES
  ('system/csw/enabledWhenIndexing', 'true', 2, 1211, 'y');

DELETE FROM Settings WHERE  name = 'map/is3DModeAllowed';
DELETE FROM Settings WHERE  name = 'map/isMapViewerEnabled';
DELETE FROM Settings WHERE  name = 'map/config';
DELETE FROM Settings WHERE  name = 'map/proj4js';
DELETE FROM Settings WHERE  name = 'map/isSaveMapInCatalogAllowed';
DELETE FROM Settings WHERE  name = 'map/bingKey';

DELETE FROM Settings WHERE name like 'system/shib%';

create table selections
(
    id          integer      not null
        constraint selections_pkey
            primary key,
    name        varchar(255) not null,
    iswatchable char         not null
);

create table selectionsdes
(
    iddes  integer      not null
        constraint fk_r0y9hytqn3nodmwn86hn2vsgf
            references selections
        constraint fksajphs09xp3bsyvnactn7nuda
            references selections,
    label  varchar(255) not null,
    langid varchar(5)   not null,
    constraint selectionsdes_pkey
        primary key (iddes, langid)
);

INSERT INTO Selections (id, name, isWatchable) VALUES (0, 'PreferredList', 'n');
INSERT INTO Selections (id, name, isWatchable) VALUES (1, 'WatchList', 'y');
INSERT INTO SelectionsDes (iddes, langid, label) VALUES (0,'eng','Preferred records');
INSERT INTO SelectionsDes (iddes, langid, label) VALUES (1,'eng','Watch list');
INSERT INTO SelectionsDes (iddes, langid, label) VALUES (0,'fre','Fiches préférées');
INSERT INTO SelectionsDes (iddes, langid, label) VALUES (1,'fre','Fiches observées');


INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/userFeedback/lastNotificationDate', '', 0, 1912, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/import/restrict', '', 0, 11000, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/xlinkResolver/referencedDeletionAllowed', 'true', 2, 2313, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/backuparchive/enable', 'false', 2, 12000, 'n');

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/userSelfRegistration/recaptcha/enable', 'false', 2, 1910, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/userSelfRegistration/recaptcha/publickey', '', 0, 1910, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/userSelfRegistration/recaptcha/secretkey', '', 0, 1910, 'y');



-- 3.4.0 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v340/migrate-default.sql

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/metadata/validation/removeSchemaLocation', 'false', 2, 9170, 'n');

-- 3.4.1 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v341/migrate-default.sql

-- 3.4.2 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v342/migrate-default.sql

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/inspire/remotevalidation/url', 'https://inspire.ec.europa.eu/validator/', 0, 7211, 'n');
UPDATE Settings SET internal='n' WHERE name='system/inspire/enable';

UPDATE Settings SET datatype = 0, value = 'off' WHERE name = 'system/localrating/enable' and value = 'n';
UPDATE Settings SET datatype = 0, value = 'basic' WHERE name = 'system/localrating/enable' and value = 'y';

create table guf_keywords
(
    id    bigint not null
        constraint guf_keywords_pkey
            primary key,
    value varchar(255)
);
create table guf_ratingcriteria
(
    id         integer                  not null
        constraint guf_ratingcriteria_pkey
            primary key,
    isinternal char default 'y'::bpchar not null,
    name       varchar(32)              not null
);
create table guf_ratingcriteriades
(
    iddes  integer       not null
        constraint fk_1lkdhdb0cdxrb4isdw1nyfdh6
            references guf_ratingcriteria,
    label  varchar(2000) not null,
    langid varchar(5)    not null,
    constraint guf_ratingcriteriades_pkey
        primary key (iddes, langid)
);
create table guf_userfeedbacks
(
    uuid               varchar(255) not null
        constraint guf_userfeedbacks_pkey
            primary key,
    authoremail        varchar(255),
    authorname         varchar(255),
    authororganization varchar(255),
    authorprivacy      integer,
    commenttext        varchar(255),
    creationdate       timestamp,
    status             varchar(255) not null,
    approver_id        integer
        constraint fk_pfxi1xtym8krmkj1pkhv35pvi
            references users,
    author_id          integer
        constraint fk_ocsogaddd3qtlc0mcmxci2qk7
            references users,
    metadata_uuid      varchar(255)
        constraint fk_fdrac6cxjiirwxm814musflwy
            references metadata (uuid),
    parent_uuid        varchar(255)
        constraint fk_5xxivsavpmcxodjdyihca5b7w
            references guf_userfeedbacks
);
create table guf_rating
(
    id              bigint not null
        constraint guf_rating_pkey
            primary key,
    rating          integer,
    criteria_id     integer
        constraint fkpwjtc2mefxb8n08mq12ug0gko
            references guf_ratingcriteria,
    userfeedback_id varchar(255)
        constraint fkac2ja64p75d9wt5dnqkh1ak3d
            references guf_userfeedbacks
);
create table guf_userfeedback_keyword
(
    userfeedback_uuid varchar(255) not null
        constraint fk_8eyfntfd67ojp5rk43cx775f8
            references guf_userfeedbacks,
    keyword_id        bigint       not null
        constraint fk_1h4ufochinxs22n62p5l9aogv
            references guf_keywords,
    constraint guf_userfeedback_keyword_pkey
        primary key (userfeedback_uuid, keyword_id)
);
create table guf_userfeedbacks_guf_rating
(
    guf_userfeedbacks_uuid varchar(255) not null
        constraint fk_t7wlimcg8ap73tw9bi50tf2gt
            references guf_userfeedbacks,
    detailedratinglist_id  bigint       not null
        constraint uk_53dsw4x938m53yxgfwk8ee636
            unique
        constraint fk4e2gfvv6vvjsf1fwhv5fm8qug
            references guf_rating
        constraint fk_53dsw4x938m53yxgfwk8ee636
            references guf_rating,
    guf_userfeedback_uuid  varchar(255) not null
        constraint fkh3ed3wakehxpnry31tslimy7f
            references guf_userfeedbacks
);


INSERT INTO GUF_RatingCriteria (id, name, isinternal) VALUES (-1, 'Average', 'y');
INSERT INTO GUF_RatingCriteria (id, name, isinternal) VALUES (0, 'Completeness', 'n');
INSERT INTO GUF_RatingCriteria (id, name, isinternal) VALUES (1, 'Discoverability', 'n');
INSERT INTO GUF_RatingCriteria (id, name, isinternal) VALUES (2, 'Readability', 'n');
INSERT INTO GUF_RatingCriteria (id, name, isinternal) VALUES (3, 'DataQuality', 'n');
INSERT INTO GUF_RatingCriteria (id, name, isinternal) VALUES (4, 'ServiceQuality', 'n');

INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (-1,'eng', 'Average');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (0,'eng', 'Completeness#Is the information on this page complete enough to know what you can expect from this dataset?');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (1,'eng', 'Discoverability#Was it easy to find this information page?');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (2,'eng', 'Readability#Was it easy to read and understand the contents of this page?');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (3,'eng', 'Data quality#Does the dataset contain the information you expected, the dataset has enough accuracy, the data is valid/up-to-date?');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (4,'eng', 'Service quality#The dataset is provided as a service or mediatype that is easy to work with?');

INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (-1,'fre', 'Moyenne');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (0,'fre', 'Complétude#Est-ce que les informations sur cette page sont suffisamment précises pour savoir ce que vous pouvez attendre de cette ressource ?');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (1,'fre', 'Découvrabilité#Était-il facile de trouver cette page ?');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (2,'fre', 'Lisibilité#Était-il facile de comprendre le contenu de cette page ?');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (3,'fre', 'Qualité des données#Est-ce que cette ressource contient les informations attendues ? Les données sont-elles assez précises ? assez récentes ?');
INSERT INTO GUF_RatingCriteriaDes (iddes, langid, label) VALUES (4,'fre', 'Cette données est elle accessible dans un format ou via un service simple à utiliser ?');

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/harvester/disabledHarvesterTypes', '', 0, 9011, 'n');


-- 3.4.3 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v343/migrate-default.sql


-- 3.5.0 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v350/migrate-default.sql


INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/publication/doi/doienabled', 'false', 2, 191, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/publication/doi/doiurl', '', 0, 192, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/publication/doi/doiusername', '', 0, 193, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/publication/doi/doipassword', '', 0, 194, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/publication/doi/doikey', '', 0, 195, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/publication/doi/doilandingpagetemplate', 'http://localhost:8080/geonetwork/srv/resources/records/{{uuid}}', 0, 195, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/metadata/history/enabled', 'false', 2, 9171, 'n');

ALTER TABLE StatusValues ADD COLUMN  type              varchar(255);

UPDATE StatusValues SET type = 'workflow';

UPDATE StatusValues SET notificationLevel = 'recordUserAuthor' WHERE name = 'approved';
UPDATE StatusValues SET notificationLevel = 'recordUserAuthor' WHERE name = 'retired';
UPDATE StatusValues SET notificationLevel = 'recordProfileReviewer' WHERE name = 'submitted';
UPDATE StatusValues SET notificationLevel = 'recordUserAuthor' WHERE name = 'rejected';


ALTER TABLE StatusValues ADD COLUMN notificationlevel              varchar(255);

INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (100,'doiCreationTask','n', 100, 'task', 'statusUserOwner');


INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (50,'recordcreated','y', 50, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (51,'recordupdated','y', 51, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (52,'attachmentadded','y', 52, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (53,'attachmentdeleted','y', 53, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (54,'recordownerchange','y', 54, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (55,'recordgroupownerchange','y', 55, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (56,'recordprivilegeschange','y', 56, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (57,'recordcategorychange','y', 57, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (58,'recordvalidationtriggered','y', 58, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (59,'recordstatuschange','y', 59, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (60,'recordprocessingchange','y', 60, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (61,'recorddeleted','y', 61, 'event', null);
INSERT INTO StatusValues (id, name, reserved, displayorder, type, notificationLevel) VALUES  (62,'recordimported','y', 62, 'event', null);

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/vcs/enable', 'false', 2, 9161, 'n');

UPDATE Schematron SET filename = 'schematron-rules-url-check.xsl' WHERE filename = 'schematron-rules-url-check.report_only.xsl';
UPDATE Schematron SET filename = 'schematron-rules-inspire-sds.xsl' WHERE filename = 'schematron-rules-inspire-sds.disabled.xsl';
UPDATE Schematron SET filename = 'schematron-rules-inspire-strict.xsl' WHERE filename = 'schematron-rules-inspire-strict.disabled.xsl';
UPDATE Schematron SET filename = 'schematron-rules-inspire.xsl' WHERE filename = 'schematron-rules-inspire-disabled.xsl';





INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (0,'fre','Inconnu');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (1,'fre','Brouillon');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (2,'fre','Validé');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (3,'fre','Retiré');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (4,'fre','A valider');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (5,'fre','Rejeté');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (50,'fre','Fiche créée.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (51,'fre','Fiche mise à jour.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (52,'fre','Document {{h.item1}} ajouté.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (53,'fre','Document {{h.item1}} supprimé.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (54,'fre','Auteur {{h.item1}} remplacé par {{h.item2}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (55,'fre','Groupe {{h.item1}} remplacé par {{h.item2}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (56,'fre','Accès mis à jour.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (57,'fre','Changement de catégorie. Les catégories sont {{h.item1}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (58,'fre','Fiche validée. La validation est maintenant {{h.item1}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (59,'fre','Changement de status de {{h.item1}} à {{h.item2}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (60,'fre','Fiche mise à jour par le processus {{h.item1}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (61,'fre','Fiche supprimée.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (62,'fre','Fiche importée.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (100,'fre','Demande de création de DOI');


INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (50,'fre','Fiche créée.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (51,'fre','Fiche mise à jour.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (52,'fre','Document {{h.item1}} ajouté.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (53,'fre','Document {{h.item1}} supprimé.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (54,'fre','Auteur {{h.item1}} remplacé par {{h.item2}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (55,'fre','Groupe {{h.item1}} remplacé par {{h.item2}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (56,'fre','Accès mis à jour.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (57,'fre','Changement de catégorie. Les catégories sont {{h.item1}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (58,'fre','Fiche validée. La validation est maintenant {{h.item1}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (59,'fre','Changement de status de {{h.item1}} à {{h.item2}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (60,'fre','Fiche mise à jour par le processus {{h.item1}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (61,'fre','Fiche supprimée.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (62,'fre','Fiche importée.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (100,'fre','Demande de création de DOI');

INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (50,'eng','Record created.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (51,'eng','Record updated.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (52,'eng','Attachment {{h.currentStatus}} added.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (53,'eng','Attachment {{h.previousStatus}} deleted.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (54,'eng','Owner changed from {{h.previousStatus}} to {{h.currentStatus}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (55,'eng','Group owner changed from {{h.previousStatus}} to {{h.currentStatus}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (56,'eng','Privileges updated.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (57,'eng','Category changed. Now categories are {{h.currentStatus}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (58,'eng','Validation triggered. Exit status is now {{h.currentStatus}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (59,'eng','Status changed from {{h.previousStatus}} to {{h.currentStatus}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (60,'eng','Record updated by process {{h.currentStatus}}.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (61,'eng','Record deleted.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (62,'eng','Record imported.');
INSERT INTO StatusValuesDes  (iddes, langid, label) VALUES (100,'eng','DOI creation request');






-- 3.7.0 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v370/migrate-default.sql

ALTER TABLE Sources DROP COLUMN islocal;

UPDATE Metadata SET data = replace(data, 'http://standards.iso.org/ittf/PubliclyAvailableStandards/ISO_19139_Schemas/resources/codelist/ML_gmxCodelists.xml', 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml') WHERE data LIKE '%http://standards.iso.org/ittf/PubliclyAvailableStandards/ISO_19139_Schemas/resources/codelist/ML_gmxCodelists.xml%' AND schemaId = 'iso19139';

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/pdfReport/coverPdf', '', 0, 12500, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/pdfReport/introPdf', '', 0, 12501, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/pdfReport/tocPage', 'false', 2, 12502, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/pdfReport/headerLeft', '{siteInfo}', 0, 12504, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/pdfReport/headerRight', '', 0, 12505, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/pdfReport/footerLeft', '', 0, 12506, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/pdfReport/footerRight', '{date}', 0, 12507, 'y');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/pdfReport/pdfName', 'metadata_{datetime}.pdf', 0, 12507, 'n');

-- Update GML namespace for moving from ISO19139:2005 to ISO19139:2007
UPDATE Metadata SET data = replace(data, '"http://www.opengis.net/gml"', '"http://www.opengis.net/gml/3.2"') WHERE data LIKE '%"http://www.opengis.net/gml"%' AND schemaId = 'iso19139';

-- Unset 2005 schemaLocation
UPDATE Metadata SET data = replace(data, ' xsi:schemaLocation="http://www.isotc211.org/2005/gmd https://www.isotc211.org/2005/gmd/gmd.xsd http://www.isotc211.org/2005/gmx https://www.isotc211.org/2005/gmx/gmx.xsd http://www.isotc211.org/2005/srv http://schemas.opengis.net/iso/19139/20060504/srv/srv.xsd"', '') WHERE data LIKE '%xsi:schemaLocation="http://www.isotc211.org/2005/gmd https://www.isotc211.org/2005/gmd/gmd.xsd http://www.isotc211.org/2005/gmx https://www.isotc211.org/2005/gmx/gmx.xsd http://www.isotc211.org/2005/srv http://schemas.opengis.net/iso/19139/20060504/srv/srv.xsd%';

UPDATE Settings SET internal='n' WHERE name='system/server/securePort';
UPDATE Settings SET internal='n' WHERE name='system/server/port';


UPDATE metadata SET data = replace(data, '<gmd:version gco:nilReason="missing">', '<gmd:version gco:nilReason="unknown">') WHERE  data LIKE '%<gmd:version gco:nilReason="missing">%';


UPDATE Settings SET  position = position + 1 WHERE name = 'metadata/workflow/draftWhenInGroup';
UPDATE Settings SET  position = position + 1 WHERE name = 'metadata/workflow/allowPublishInvalidMd';
UPDATE Settings SET  position = position + 1 WHERE name = 'metadata/workflow/automaticUnpublishInvalidMd';
UPDATE Settings SET  position = position + 1 WHERE name = 'metadata/workflow/forceValidationOnMdSave';
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/workflow/enable', 'false', 2, 100002, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/workflow/allowSumitApproveInvalidMd', 'true', 2, 100004, 'n');
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('metadata/workflow/allowPublishNonApprovedMd', 'true', 2, 100005, 'n');




-- 3.8.1 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v381/migrate-default.sql

-- 3.8.2 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v382/migrate-default.sql


ALTER TABLE sources ADD COLUMN creationdate varchar(30);
ALTER TABLE sources ADD COLUMN filter varchar(255);
ALTER TABLE sources ADD COLUMN groupowner integer;
ALTER TABLE sources ADD COLUMN logo varchar(255);
ALTER TABLE sources ADD COLUMN servicerecord varchar(255);
ALTER TABLE sources ADD COLUMN type varchar(255);
ALTER TABLE sources ADD COLUMN uiconfig varchar(255);

UPDATE Sources SET type = 'portal' WHERE type IS null AND uuid = (SELECT value FROM settings WHERE name = 'system/site/siteId');
UPDATE Sources SET type = 'harvester' WHERE type IS null AND uuid != (SELECT value FROM settings WHERE name = 'system/site/siteId');

UPDATE Settings SET internal = 'y' WHERE name = 'system/publication/doi/doipassword';

-- 3.8.3 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v383/migrate-default.sql

-- 3.9.0 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v390/migrate-default.sql

-- 3.10.1 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v3101/migrate-default.sql
DELETE FROM cswservercapabilitiesinfo;
DELETE FROM Settings WHERE name = 'system/csw/contactId';
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/csw/capabilityRecordUuid', '-1', 0, 1220, 'y');

-- 3.10.2 https://github.com/geonetwork/core-geonetwork/blob/master/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v3102/migrate-default.sql

-- 3.10.3 https://github.com/geonetwork/core-geonetwork/blob/3.10.x/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v3103/migrate-default.sql

ALTER TABLE groupsdes ALTER COLUMN label TYPE varchar(255);
ALTER TABLE sourcesdes ALTER COLUMN label TYPE varchar(255);
ALTER TABLE schematrondes ALTER COLUMN label TYPE varchar(255);

-- New setting for server timezone
INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/server/timeZone', '', 0, 260, 'n');


-- 3.10.4 https://github.com/geonetwork/core-geonetwork/blob/3.10.x/web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v3104/migrate-default.sql

INSERT INTO Settings (name, value, datatype, position, internal) VALUES ('system/users/identicon', 'gravatar:mp', 0, 9110, 'n');

UPDATE Settings SET value='3.10.4' WHERE name='system/platform/version';
UPDATE Settings SET value='0' WHERE name='system/platform/subVersion';



-- Spécifique GL

DELETE FROM operationallowed WHERE metadataid IN (SELECT id FROM metadata WHERE schemaid = 'iso19139.fra');
DELETE FROM metadata WHERE schemaid = 'iso19139.fra';

UPDATE settings SET value = 'false' WHERE name = 'system/searchStats/enable';
UPDATE settings SET value = 'false' WHERE name = 'system/xlinkResolver/enable';
UPDATE settings SET value = 'false' WHERE name = 'system/autodetect/enable';
DELETE FROM settings WHERE name = 'metadata/editor/schemaConfig';

-- Suppression historique de moissonnage
DELETE FROM harvesthistory;

-- Suppression stats de la recherche (ne fonctionne plus vraiment en 3.10)
DELETE FROM params;
DELETE FROM requests;

-- Vielles tables sans doute
DROP TABLE settingsbackup;
DROP TABLE metadatanotifications_tmp;


-- Cleanup dans les fiches
-- * Namespace profil fra n'existe plus
UPDATE metadata SET data = replace(data, ' xmlns:fra="http://www.cnig.gouv.fr/2005/fra"', '') WHERE data LIKE '% xmlns:fra="http://www.cnig.gouv.fr/2005/fra"%';

-- * Thesaurus INSPIRE par le registre INSPIRE
UPDATE metadata SET data = replace(data, '/thesaurus.download?ref=external.theme.inspire-theme">geonetwork.thesaurus.external.theme.inspire-theme', '/thesaurus.download?ref=external.theme.httpinspireeceuropaeutheme-theme">geonetwork.thesaurus.external.theme.httpinspireeceuropaeutheme-theme') WHERE data LIKE '%/thesaurus.download?ref=external.theme.inspire-theme">geonetwork.thesaurus.external.theme.inspire-theme%';

-- * Vieux liens
UPDATE metadata SET data = replace(data, 'http://geosource.grandlyon.fr/geosource', 'https://download.data.grandlyon.com/catalogue') WHERE data LIKE '%http://geosource.grandlyon.fr/geosource%';
